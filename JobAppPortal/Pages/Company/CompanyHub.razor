@page "/Company"
@inject NavigationManager NavManager
@inject HttpClient Http



<AuthorizeView>
    <Authorized>
        <h1>Hello,@context.User.FindFirst(ClaimTypes.Name).Value.</h1>
        <h2>Company Hub</h2>

        @if (companies is null)
        {
            @if (errorMessage is not null)
            {
                <p><em>@errorMessage</em></p>
            }
            else
            {
                <p><em>Loading Data...</em></p>
            }
        }
        else
        {
            foreach (var company in companies)
            {
                <h3>@company.CompanyName</h3>
                <p>@company.Description</p>
                <h5>History:</h5>
                @if (company.Histories is not null)
                {
                    @foreach (var history in company.Histories)
                    {
                        <p>@history.Content</p>
                    }
                }
                else
                {
                    <em>Nothing yet.</em>
                }

                <h5>Branches:</h5>
                @if (company.Branches is not null)
                {
                    @foreach (var branch in company.Branches)
                    {
                        <h4>@branch.Name</h4>
                        <p>@branch.Description</p>
                        <h5>Contacts:</h5>
                        @if (branch.Contacts is null)
                        {

                            <p>No contact data known</p>
                        }
                        else
                        {
                            @branch.Contacts;
                            var i = 1;
                            @foreach (var contact in branch.Contacts)
                            {
                                <p>contact no @i</p>
                                <p>@contact.PhoneNumber</p>
                                <p>@contact.EmailAddress</p>
                                i++;
                            }
                        }
                        <h5>Offers:</h5>

                        @if (branch.Offers is not null)
                        {
                            @foreach (var offer in branch.Offers)
                            {
                                <p>@offer.JobOfferUrl</p>
                            }
                        }
                        else
                        {
                            <p>No offers</p>
                        }
                    }
                }
                else
                {
                    <p>No branch known.</p>
                }
            }
        }













    </Authorized>
    <NotAuthorized>
        <h1>Hello, world!</h1>
        Please <a href="login">Log In</a> to use this service.
    </NotAuthorized>
</AuthorizeView>



@code {
    private Company[] companies;

    private string errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            companies = await Http.GetFromJsonAsync<Company[]>("https://localhost:44372/Api/Companies/GetAll");
        }
        catch (Exception exception)
        {
            errorMessage = exception.ToString();
        }

    }


    public class Company
    {
        public int Id { get; set; }

        public string CompanyName { get; set; }

        public bool Current { get; set; }

        public string Description { get; set; }

        public List<Branch> Branches { get; set; }

        public List<History> Histories { get; set; }
    }


    public class Branch
    {
        public int Id { get; set; }
        public int CompanyId { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public string AddressNation { get; set; }
        public string AddressStreet { get; set; }
        public string AddressState { get; set; }
        public List<Contact> Contacts { get; set; }
        public List<Offer> Offers { get; set; }
    }

    public class History
    {
        public int Id { get; set; }
        public int CompanyId { get; set; }
        public string Name { get; set; }
        public string Content { get; set; }
        public DateTime Date { get; set; }
    }

    public class Contact
    {
        public int Id { get; set; }
        public int CompanyId { get; set; }
        public int CompanyBranchId { get; set; }
        public string PhoneNumber { get; set; }
        public string PhoneNumberAlt { get; set; }
        public string EmailAddress { get; set; }
        public string EmailAddressAlt { get; set; }
        public bool IsActive { get; set; }
    }

    public class Offer
    {
        public int Id { get; set; }
        public int CompanyId { get; set; }
        public int CompanyBranchId { get; set; }
        public int JobId { get; set; }
        public int HeadHunterId { get; set; }
        public int ApplicationId { get; set; }
        public string SalaryOffered { get; set; }
        public bool IsActive { get; set; }
        public string ReleaseDate { get; set; }
        public string JobOfferUrl { get; set; }
    }
}