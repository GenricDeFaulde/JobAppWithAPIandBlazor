//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v2.0.5.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace JobApp.Models.CompanyModel
{
  /// <summary>
  /// Info on branch of company
  /// </summary>
  public class CompanyBranch
  {
    //partial void Init();

    ///// <summary>
    ///// Default constructor. Protected due to required properties, but present because EF needs it.
    ///// </summary>
    //protected CompanyBranch()
    //{
    //   Contacts = new System.Collections.Generic.HashSet<global::JobApp.Models.CompanyModel.CompanyContactData>();

    //   Init();
    //}

    ///// <summary>
    ///// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
    ///// </summary>
    //public static CompanyBranch CreateCompanyBranchUnsafe()
    //{
    //   return new CompanyBranch();
    //}

    ///// <summary>
    ///// Public constructor with required data
    ///// </summary>
    ///// <param name="companyid">Required</param>
    ///// <param name="name">Required, Max length = 50</param>
    ///// <param name="addressnation">Required, Max length = 50</param>
    ///// <param name="addresscity">Required, Max length = 50</param>
    ///// <param name="addressstreet">Required, Max length = 50</param>
    ///// <param name="addressstate">Max length = 30</param>
    ///// <param name="_company0"></param>
    //public CompanyBranch(int companyid, string name, string addressnation, string addresscity, string addressstreet, string addressstate, global::JobApp.Models.CompanyModel.Company _company0)
    //{
    //   this.CompanyId = companyid;

    //   if (string.IsNullOrEmpty(name)) throw new ArgumentNullException(nameof(name));
    //   this.Name = name;

    //   if (string.IsNullOrEmpty(addressnation)) throw new ArgumentNullException(nameof(addressnation));
    //   this.AddressNation = addressnation;

    //   if (string.IsNullOrEmpty(addresscity)) throw new ArgumentNullException(nameof(addresscity));
    //   this.AddressCity = addresscity;

    //   if (string.IsNullOrEmpty(addressstreet)) throw new ArgumentNullException(nameof(addressstreet));
    //   this.AddressStreet = addressstreet;

    //   if (string.IsNullOrEmpty(addressstate)) throw new ArgumentNullException(nameof(addressstate));
    //   this.AddressState = addressstate;

    //   if (_company0 == null) throw new ArgumentNullException(nameof(_company0));
    //   _company0.Branches.Add(this);

    //   this.Contacts = new System.Collections.Generic.HashSet<global::JobApp.Models.CompanyModel.CompanyContactData>();

    //   Init();
    //}

    ///// <summary>
    ///// Static create function (for use in LINQ queries, etc.)
    ///// </summary>
    ///// <param name="companyid">Required</param>
    ///// <param name="name">Required, Max length = 50</param>
    ///// <param name="addressnation">Required, Max length = 50</param>
    ///// <param name="addresscity">Required, Max length = 50</param>
    ///// <param name="addressstreet">Required, Max length = 50</param>
    ///// <param name="addressstate">Max length = 30</param>
    ///// <param name="_company0"></param>
    //public static CompanyBranch Create(int companyid, string name, string addressnation, string addresscity, string addressstreet, string addressstate, global::JobApp.Models.CompanyModel.Company _company0)
    //{
    //   return new CompanyBranch(companyid, name, addressnation, addresscity, addressstreet, addressstate, _company0);
    //}

    /*************************************************************************
     * Properties
     *************************************************************************/

    /// <summary>
    /// Identity, Required
    /// </summary>
    [Key]
    [Required]
    public int Id { get; set; }

    /// <summary>
    /// Required
    /// </summary>
    [Required]
    public int CompanyId { get; set; }

    /// <summary>
    /// Required, Max length = 50
    /// </summary>
    [Required]
    [MaxLength(50)]
    [StringLength(50)]
    public string Name { get; set; }

    /// <summary>
    /// Required, Max length = 150
    /// </summary>
    [MaxLength(150)]
    [StringLength(150)]
    public string Description { get; set; }

    /// <summary>
    /// Required, Max length = 50
    /// </summary>
    [Required]
    [MaxLength(50)]
    [StringLength(50)]
    public string AddressNation { get; set; }

    /// <summary>
    /// Required, Max length = 50
    /// </summary>
    [Required]
    [MaxLength(50)]
    [StringLength(50)]
    public string AddressCity { get; set; }

    /// <summary>
    /// Required, Max length = 50
    /// </summary>
    [Required]
    [MaxLength(50)]
    [StringLength(50)]
    public string AddressStreet { get; set; }

    /// <summary>
    /// Required, Max length = 30
    /// </summary>
    [Required]
    [MaxLength(30)]
    [StringLength(30)]
    public string AddressState { get; set; }

    /*************************************************************************
     * Navigation properties
     *************************************************************************/

    /// <summary>
    /// company deletes branch deletes contactdata
    /// </summary>
    public virtual ICollection<global::JobApp.Models.CompanyModel.CompanyContactData> Contacts { get; protected set; }

    public Company Company { get; set; }
    public virtual ICollection<global::JobApp.Models.JobModel.JobOffer> Offers { get; protected set; }

  }
}

