//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v2.0.5.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace JobApp.Models.UserModel
{
   /// <summary>
   /// Summary of the users education
   /// </summary>
   public class UserEducation
   {
      //partial void Init();

      ///// <summary>
      ///// Default constructor. Protected due to required properties, but present because EF needs it.
      ///// </summary>
      //protected UserEducation()
      //{
      //   Init();
      //}

      ///// <summary>
      ///// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      ///// </summary>
      //public static UserEducation CreateUserEducationUnsafe()
      //{
      //   return new UserEducation();
      //}

      ///// <summary>
      ///// Public constructor with required data
      ///// </summary>
      ///// <param name="userid">Required</param>
      ///// <param name="title">Required, Max length = 50     Name of educational phase</param>
      ///// <param name="facility">Required, Max length = 50     Name of educational facility</param>
      ///// <param name="addressnation">Required, Max length = 50     Nation where this Facility is located</param>
      ///// <param name="facilityaddresscity">Required, Max length = 50     City address of this facility (including PO number)</param>
      ///// <param name="facilityaddressstreet">Required, Max length = 50     Street address of this facility (including house number)</param>
      ///// <param name="facilityaddressstate">Required, Max length = 50     Stateaddress of this facility</param>
      ///// <param name="graduation">Required, Max length = 50     Type of graduation achieved in this facility</param>
      ///// <param name="testimonyurl">Max length = 50     Url to the testimony</param>
      ///// <param name="startdate">Required     Start date of education in this facility</param>
      ///// <param name="enddate">Required     End date of education in this facility</param>
      ///// <param name="_user0"></param>
      //public UserEducation(int userid, string title, string facility, string addressnation, string facilityaddresscity, string facilityaddressstreet, string facilityaddressstate, string graduation, string testimonyurl, DateTime startdate, DateTime enddate, global::JobApp.Models.UserModel.User _user0)
      //{
      //   this.UserId = userid;

      //   if (string.IsNullOrEmpty(title)) throw new ArgumentNullException(nameof(title));
      //   this.Title = title;

      //   if (string.IsNullOrEmpty(facility)) throw new ArgumentNullException(nameof(facility));
      //   this.Facility = facility;

      //   if (string.IsNullOrEmpty(addressnation)) throw new ArgumentNullException(nameof(addressnation));
      //   this.AddressNation = addressnation;

      //   if (string.IsNullOrEmpty(facilityaddresscity)) throw new ArgumentNullException(nameof(facilityaddresscity));
      //   this.FacilityAddressCity = facilityaddresscity;

      //   if (string.IsNullOrEmpty(facilityaddressstreet)) throw new ArgumentNullException(nameof(facilityaddressstreet));
      //   this.FacilityAddressStreet = facilityaddressstreet;

      //   if (string.IsNullOrEmpty(facilityaddressstate)) throw new ArgumentNullException(nameof(facilityaddressstate));
      //   this.FacilityAddressState = facilityaddressstate;

      //   if (string.IsNullOrEmpty(graduation)) throw new ArgumentNullException(nameof(graduation));
      //   this.Graduation = graduation;

      //   if (string.IsNullOrEmpty(testimonyurl)) throw new ArgumentNullException(nameof(testimonyurl));
      //   this.TestimonyUrl = testimonyurl;

      //   this.StartDate = startdate;

      //   this.EndDate = enddate;

      //   if (_user0 == null) throw new ArgumentNullException(nameof(_user0));
      //   _user0.EducationHistory.Add(this);


      //   Init();
      //}

      ///// <summary>
      ///// Static create function (for use in LINQ queries, etc.)
      ///// </summary>
      ///// <param name="userid">Required</param>
      ///// <param name="title">Required, Max length = 50     Name of educational phase</param>
      ///// <param name="facility">Required, Max length = 50     Name of educational facility</param>
      ///// <param name="addressnation">Required, Max length = 50     Nation where this Facility is located</param>
      ///// <param name="facilityaddresscity">Required, Max length = 50     City address of this facility (including PO number)</param>
      ///// <param name="facilityaddressstreet">Required, Max length = 50     Street address of this facility (including house number)</param>
      ///// <param name="facilityaddressstate">Required, Max length = 50     Stateaddress of this facility</param>
      ///// <param name="graduation">Required, Max length = 50     Type of graduation achieved in this facility</param>
      ///// <param name="testimonyurl">Max length = 50     Url to the testimony</param>
      ///// <param name="startdate">Required     Start date of education in this facility</param>
      ///// <param name="enddate">Required     End date of education in this facility</param>
      ///// <param name="_user0"></param>
      //public static UserEducation Create(int userid, string title, string facility, string addressnation, string facilityaddresscity, string facilityaddressstreet, string facilityaddressstate, string graduation, string testimonyurl, DateTime startdate, DateTime enddate, global::JobApp.Models.UserModel.User _user0)
      //{
      //   return new UserEducation(userid, title, facility, addressnation, facilityaddresscity, facilityaddressstreet, facilityaddressstate, graduation, testimonyurl, startdate, enddate, _user0);
      //}

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Required
      /// Identity, Required
      /// </summary>
      [Key]
      [Required]
      public int Id { get; protected set; }

      /// <summary>
      /// Required
      /// Required
      /// </summary>
      [Required]
      public int UserId { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     Name of educational phase
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string Title { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     Name of educational facility
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string Facility { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     Nation where this Facility is located
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string AddressNation { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     City address of this facility (including PO number)
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string FacilityAddressCity { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     Street address of this facility (including house number)
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string FacilityAddressStreet { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     Stateaddress of this facility
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string FacilityAddressState { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     Type of graduation achieved in this facility
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string Graduation { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Max length = 50     Url to the testimony
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string TestimonyUrl { get; set; }

      /// <summary>
      /// Required
      /// Required     Start date of education in this facility
      /// </summary>
      [Required]
      public DateTime StartDate { get; set; }

      /// <summary>
      /// Required
      /// Required     End date of education in this facility
      /// </summary>
      [Required]
      public DateTime EndDate { get; set; }

        /*************************************************************************
         * Navigation properties
         *************************************************************************/
        public User User { get; set; }

    }
}

