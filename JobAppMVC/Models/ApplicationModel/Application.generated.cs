//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v2.0.5.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;
using JobApp.Models.UserModel;

namespace JobApp.Models.ApplicationModel
{
   /// <summary>
   /// Main Application class
   /// </summary>
   public class Application
   {
      //partial void Init();

      ///// <summary>
      ///// Default constructor. Protected due to required properties, but present because EF needs it.
      ///// </summary>
      //protected Application()
      //{
      //   Init();
      //}

      ///// <summary>
      ///// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      ///// </summary>
      //public static Application CreateApplicationUnsafe()
      //{
      //   return new Application();
      //}

      ///// <summary>
      ///// Public constructor with required data
      ///// </summary>
      ///// <param name="userid">Required</param>
      ///// <param name="title">Required, Max length = 30</param>
      ///// <param name="answer">Max length = 500     Falls eine Antwort vorliegt, hier speichern</param>
      ///// <param name="datesent">Required</param>
      ///// <param name="dateanswered">date when answer arrived, if application was answered</param>
      ///// <param name="_user0"></param>
      ///// <param name="_joboffer1"></param>
      //public Application(int userid, string title, string answer, DateTime datesent, DateTime dateanswered, global::JobApp.Models.UserModel.User _user0, global::JobApp.Models.JobModel.JobOffer _joboffer1)
      //{
      //   this.UserId = userid;

      //   if (string.IsNullOrEmpty(title)) throw new ArgumentNullException(nameof(title));
      //   this.Title = title;

      //   if (string.IsNullOrEmpty(answer)) throw new ArgumentNullException(nameof(answer));
      //   this.Answer = answer;

      //   this.DateSent = datesent;

      //   this.DateAnswered = dateanswered;

      //   if (_user0 == null) throw new ArgumentNullException(nameof(_user0));
      //   _user0.Applications.Add(this);

      //   if (_joboffer1 == null) throw new ArgumentNullException(nameof(_joboffer1));
      //   _joboffer1.Application = this;


      //   Init();
      //}

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="userid">Required</param>
      /// <param name="title">Required, Max length = 30</param>
      /// <param name="answer">Max length = 500     Falls eine Antwort vorliegt, hier speichern</param>
      /// <param name="datesent">Required</param>
      /// <param name="dateanswered">date when answer arrived, if application was answered</param>
      /// <param name="_user0"></param>
      /// <param name="_joboffer1"></param>
      //public static Application Create(int userid, string title, string answer, DateTime datesent, DateTime dateanswered, global::JobApp.Models.UserModel.User _user0, global::JobApp.Models.JobModel.JobOffer _joboffer1)
      //{
      //   return new Application(userid, title, answer, datesent, dateanswered, _user0, _joboffer1);
      //}

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Required
      /// Identity, Required
      /// </summary>
      [Key]
      [Required]
      public int Id { get; protected set; }

      /// <summary>
      /// Required
      /// Required
      /// </summary>
      [Required]
      public int UserId { get; set; }

      /// <summary>
      /// FK to the joboffer this application was used for
      /// </summary>
      public int? JobOfferId { get; set; }

      /// <summary>
      /// Required, Max length = 30
      /// Required, Max length = 30
      /// </summary>
      [Required]
      [MaxLength(30)]
      [StringLength(30)]
      public string Title { get; set; }

      /// <summary>
      /// Required, Max length = 500
      /// Max length = 500     Falls eine Antwort vorliegt, hier speichern
      /// </summary>
      [Required]
      [MaxLength(500)]
      [StringLength(500)]
      public string Answer { get; set; }

      /// <summary>
      /// Required
      /// Required
      /// </summary>
      [Required]
      public DateTime DateSent { get; set; }

      /// <summary>
      /// Required
      /// date when answer arrived, if application was answered
      /// </summary>
      [Required]
      public DateTime DateAnswered { get; set; }

      /// <summary>
      /// Required     Historic retention property
      /// </summary>
      public byte[] Current { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// summary
      /// </summary>
      public virtual global::JobApp.Models.ApplicationModel.ApplicationHeader Header { get; set; }

      /// <summary>
      /// summary
      /// </summary>
      public virtual global::JobApp.Models.ApplicationModel.ApplicationBody Body { get; set; }

      /// <summary>
      /// summary
      /// </summary>
      public virtual global::JobApp.Models.ApplicationModel.ApplicationFooter Footer { get; set; }
        public User User { get; set; }


    }
}

