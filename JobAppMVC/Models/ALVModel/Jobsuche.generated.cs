// TODO cleanup ALL autogenerated code in ALL models!!!

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v2.0.5.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;
using JobApp.Models.UserModel;

namespace JobApp.Models.ALVModel
{
   /// <summary>
   /// Has all information to generate ALV view
   /// </summary>
   public class Jobsuche
   {
      //partial void Init();

      ///// <summary>
      ///// Default constructor. Protected due to required properties, but present because EF needs it.
      ///// </summary>
      //protected Jobsuche()
      //{
      //   Init();
      //}

      ///// <summary>
      ///// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      ///// </summary>
      //public static Jobsuche CreateJobsucheUnsafe()
      //{
      //   return new Jobsuche();
      //}

      ///// <summary>
      ///// Public constructor with required data
      ///// </summary>
      ///// <param name="userid">FK to the user</param>
      ///// <param name="jobofferid">FK to an offered job</param>
      ///// <param name="jobid">FK to the job master class</param>
      ///// <param name="status">status of send application request</param>
      ///// <param name="datesent">when was the application request sent</param>
      ///// <param name="dateanswered">Date when answer arrived if application was answered</param>
      ///// <param name="_user0"></param>
      ///// <param name="_joboffer1"></param>
      //public Jobsuche(int userid, int jobofferid, int jobid, string status, DateTime datesent, DateTime dateanswered, global::JobApp.Models.UserModel.User _user0, global::JobApp.Models.JobModel.JobOffer _joboffer1)
      //{
      //   this.UserId = userid;

      //   this.JobOfferId = jobofferid;

      //   this.JobId = jobid;

      //   if (string.IsNullOrEmpty(status)) throw new ArgumentNullException(nameof(status));
      //   this.Status = status;

      //   this.DateSent = datesent;

      //   this.DateAnswered = dateanswered;

      //   if (_user0 == null) throw new ArgumentNullException(nameof(_user0));
      //   _user0.JobsGesucht.Add(this);

      //   if (_joboffer1 == null) throw new ArgumentNullException(nameof(_joboffer1));
      //   _joboffer1.Jobsuche = this;


      //   Init();
      //}

      ///// <summary>
      ///// Static create function (for use in LINQ queries, etc.)
      ///// </summary>
      ///// <param name="userid">FK to the user</param>
      ///// <param name="jobofferid">FK to an offered job</param>
      ///// <param name="jobid">FK to the job master class</param>
      ///// <param name="status">status of send application request</param>
      ///// <param name="datesent">when was the application request sent</param>
      ///// <param name="dateanswered">Date when answer arrived if application was answered</param>
      ///// <param name="_user0"></param>
      ///// <param name="_joboffer1"></param>
      //public static Jobsuche Create(int userid, int jobofferid, int jobid, string status, DateTime datesent, DateTime dateanswered, global::JobApp.Models.UserModel.User _user0, global::JobApp.Models.JobModel.JobOffer _joboffer1)
      //{
      //   return new Jobsuche(userid, jobofferid, jobid, status, datesent, dateanswered, _user0, _joboffer1);
      //}

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Required
      /// Identity of Jobsuche class
      /// </summary>
      [Key]
      [Required]
      public int Id { get; protected set; }

      /// <summary>
      /// Required
      /// FK to the user
      /// </summary>
      [Required]
      public int UserId { get; set; }

      /// <summary>
      /// Required
      /// FK to an offered job
      /// </summary>
      [Required]
      public int JobOfferId { get; set; }

      /// <summary>
      /// FK to a company
      /// </summary>
      public int? CompanyId { get; set; }

      /// <summary>
      /// Max length = 50
      /// if application was sent by email
      /// </summary>
      [MaxLength(50)]
      [StringLength(50)]
      public string Email { get; set; }

      /// <summary>
      /// Required
      /// FK to the job master class
      /// </summary>
      [Required]
      public int JobId { get; set; }

      /// <summary>
      /// Required, Max length = 20
      /// status of send application request
      /// </summary>
      [Required]
      [MaxLength(20)]
      [StringLength(20)]
      public string Status { get; set; }

      /// <summary>
      /// Required
      /// when was the application request sent
      /// </summary>
      [Required]
      public DateTime DateSent { get; set; }

      /// <summary>
      /// Required
      /// Date when answer arrived if application was answered
      /// </summary>
      [Required]
      public DateTime DateAnswered { get; set; }

      /// <summary>
      /// Proof of application
      /// </summary>
      public byte[] Proof { get; set; }

        /*************************************************************************
         * Navigation properties
         *************************************************************************/
        public User User { get; set; }

    }
}

