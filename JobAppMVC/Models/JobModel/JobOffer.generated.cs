//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v2.0.5.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;
using Microsoft.AspNetCore.Mvc.Rendering;

namespace JobApp.Models.JobModel
{
  /// <summary>
  /// An offered Job
  /// </summary>
  public partial class JobOffer
  {
    //partial void Init();

    ///// <summary>
    ///// Default constructor. Protected due to required properties, but present because EF needs it.
    ///// </summary>
    //protected JobOffer()
    //{
    //   Init();
    //}

    ///// <summary>
    ///// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
    ///// </summary>
    //public static JobOffer CreateJobOfferUnsafe()
    //{
    //   return new JobOffer();
    //}

    ///// <summary>
    ///// Public constructor with required data
    ///// </summary>
    ///// <param name="isactive">Required</param>
    ///// <param name="releasedate">Required</param>
    //public JobOffer(bool isactive, DateTime releasedate)
    //{
    //   this.IsActive = isactive;

    //   this.Releasedate = releasedate;


    //   Init();
    //}

    ///// <summary>
    ///// Static create function (for use in LINQ queries, etc.)
    ///// </summary>
    ///// <param name="isactive">Required</param>
    ///// <param name="releasedate">Required</param>
    //public static JobOffer Create(bool isactive, DateTime releasedate)
    //{
    //   return new JobOffer(isactive, releasedate);
    //}

    /*************************************************************************
     * Properties
     *************************************************************************/

    /// <summary>
    /// Identity, Required
    /// Identity, Required
    /// </summary>
    [Key]
    [Required]
    public int Id { get; protected set; }

    /// <summary>
    /// FK to a companies branch
    /// </summary>
    public int? CompanyBranchId { get; set; }

    /// <summary>
    /// linkback to the details of an offered job
    /// </summary>
    public int? JobId { get; set; }

    /// <summary>
    /// FK to Headhunter
    /// </summary>
    public int? HeadHunterId { get; set; }

    /// <summary>
    /// FK to Jobexchange
    /// </summary>
    public int? JobExchangeId { get; set; }

    /// <summary>
    /// wich aplication was sent
    /// </summary>
    public int? ApplicationnId { get; set; }

    /// <summary>
    /// Offered salary for Job
    /// </summary>
    public decimal? SalaryOffered { get; set; }

    /// <summary>
    /// Required
    /// Required
    /// </summary>
    [Required]
    public bool IsActive { get; set; }

    /// <summary>
    /// Required
    /// Required
    /// </summary>
    [Required]
    public DateTime Releasedate { get; set; }

    /// <summary>
    /// Max length = 50
    /// URL to the joboffer, if avialable
    /// </summary>
    [MaxLength(50)]
    [StringLength(50)]
    public string JobOfferUrl { get; set; }


    /*************************************************************************
     * Create selectlists
     *************************************************************************/
    [NotMapped]
    public List<SelectListItem> CompanyBranchesList { get; set; }
    [NotMapped]
    public List<SelectListItem> JobsList { get; set; }
    [NotMapped]
    public List<SelectListItem> HeadHuntersList { get; set; }
    [NotMapped]
    public List<SelectListItem> JobExchangesList { get; set; }


    /*************************************************************************
     * Navigation properties
     *************************************************************************/

    /// <summary>
    /// summary
    /// </summary>
    public virtual global::JobApp.Models.ApplicationModel.Application Application { get; set; }

    /// <summary>
    /// summary
    /// </summary>
    public virtual global::JobApp.Models.ALVModel.Jobsuche Jobsuche { get; set; }

    /// <summary>
    /// summary
    /// </summary>
    public virtual global::JobApp.Models.JobModel.Job Job { get; set; }

    /// <summary>
    /// summary
    /// </summary>
    public virtual global::JobApp.Models.JobModel.JobExchange JobExchange { get; set; }

    /// <summary>
    /// summary
    /// </summary>
    public virtual global::JobApp.Models.CompanyModel.CompanyBranch CompanyBranch { get; set; }

    /// <summary>
    /// summary
    /// </summary>
    public virtual global::JobApp.Models.HeadHunterModel.HeadHunter HeadHunter { get; set; }

  }
}

