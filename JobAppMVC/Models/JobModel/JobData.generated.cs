//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v2.0.5.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace JobApp.Models.JobModel
{
   /// <summary>
   /// General Data about a job
   /// </summary>
   public class JobData
   {
      //partial void Init();

      ///// <summary>
      ///// Default constructor. Protected due to required properties, but present because EF needs it.
      ///// </summary>
      //protected JobData()
      //{
      //   Init();
      //}

      ///// <summary>
      ///// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      ///// </summary>
      //public static JobData CreateJobDataUnsafe()
      //{
      //   return new JobData();
      //}

      ///// <summary>
      ///// Public constructor with required data
      ///// </summary>
      ///// <param name="jobid">Required</param>
      ///// <param name="descriptionshort">Required, Max length = 50</param>
      ///// <param name="nation">Required, Max length = 50     What nation this data applies to</param>
      ///// <param name="region">Required, Max length = 50     What region this data applies to</param>
      ///// <param name="minsalary">Required     Minimum Salary one could expect for this Job in this Region</param>
      ///// <param name="maxsalary">Required     Maximum Salary one could expect for this Job in this Region</param>
      ///// <param name="current">Historic retention property</param>
      ///// <param name="_job0"></param>
      //public JobData(int jobid, string descriptionshort, string nation, string region, decimal minsalary, decimal maxsalary, bool current, global::JobApp.Models.JobModel.Job _job0)
      //{
      //   this.JobId = jobid;

      //   if (string.IsNullOrEmpty(descriptionshort)) throw new ArgumentNullException(nameof(descriptionshort));
      //   this.DescriptionShort = descriptionshort;

      //   if (string.IsNullOrEmpty(nation)) throw new ArgumentNullException(nameof(nation));
      //   this.Nation = nation;

      //   if (string.IsNullOrEmpty(region)) throw new ArgumentNullException(nameof(region));
      //   this.Region = region;

      //   this.MinSalary = minsalary;

      //   this.MaxSalary = maxsalary;

      //   this.Current = current;

      //   if (_job0 == null) throw new ArgumentNullException(nameof(_job0));
      //   _job0.JobData.Add(this);


      //   Init();
      //}

      ///// <summary>
      ///// Static create function (for use in LINQ queries, etc.)
      ///// </summary>
      ///// <param name="jobid">Required</param>
      ///// <param name="descriptionshort">Required, Max length = 50</param>
      ///// <param name="nation">Required, Max length = 50     What nation this data applies to</param>
      ///// <param name="region">Required, Max length = 50     What region this data applies to</param>
      ///// <param name="minsalary">Required     Minimum Salary one could expect for this Job in this Region</param>
      ///// <param name="maxsalary">Required     Maximum Salary one could expect for this Job in this Region</param>
      ///// <param name="current">Historic retention property</param>
      ///// <param name="_job0"></param>
      //public static JobData Create(int jobid, string descriptionshort, string nation, string region, decimal minsalary, decimal maxsalary, bool current, global::JobApp.Models.JobModel.Job _job0)
      //{
      //   return new JobData(jobid, descriptionshort, nation, region, minsalary, maxsalary, current, _job0);
      //}

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Required
      /// Identity, Required
      /// </summary>
      [Key]
      [Required]
      public int Id { get; protected set; }

      /// <summary>
      /// Required
      /// Required
      /// </summary>
      [Required]
      public int JobId { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string DescriptionShort { get; set; }

      /// <summary>
      /// Max length = 250
      /// Max length = 250
      /// </summary>
      [MaxLength(250)]
      [StringLength(250)]
      public string DescriptionLong { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     What nation this data applies to
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string Nation { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// Required, Max length = 50     What region this data applies to
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string Region { get; set; }

      /// <summary>
      /// Required
      /// Required     Minimum Salary one could expect for this Job in this Region
      /// </summary>
      [Required]
      public decimal MinSalary { get; set; }

      /// <summary>
      /// Required
      /// Required     Maximum Salary one could expect for this Job in this Region
      /// </summary>
      [Required]
      public decimal MaxSalary { get; set; }

      /// <summary>
      /// Required
      /// Historic retention property
      /// </summary>
      [Required]
      public bool Current { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/
      public Job Job { get; set; }
   }
}

